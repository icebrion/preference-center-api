openapi: 3.0.1
info:
  title: Users API
  version: 1.0.0
  description: API for managing users

paths:
  /users:
    get:
      operationId: getAllUsers
      summary: List all users
      tags:
        - users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'

    post:
      operationId: upsertUser
      summary: Create or update a user
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '201':
          description: Created or updated user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
        '422':
          description: User not valid

  /users/{userId}:
    get:
      operationId: getUser
      summary: Get a user by ID
      tags:
        - users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '404':
          description: User not found

    put:
      operationId: putUser
      summary: Update a user by ID
      tags:
        - users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

    delete:
      operationId: deleteUser
      summary: Delete a user by ID
      tags:
        - users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted

components:
  schemas:
    UserRequest:
      type: object
      properties:
        email:
          type: string
        consents:
          type: array
          items:
            $ref: '#/components/schemas/Consent'
    UserResponse:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        consents:
          type: array
          items:
            $ref: '#/components/schemas/Consent'
    Consent:
      type: object
      properties:
        id:
          type: string
        enabled:
          type: boolean

tags:
  - users